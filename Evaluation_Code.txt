# 数据摘要打印：customer-date 去重、唯一个客数等
# 注：print 输出为英文；注释为中文

import pandas as pd

# 若 pred 尚未加载，请取消下一行注释并确保 pred_path 指向你的预测 CSV
# pred = pd.read_csv(pred_path, parse_dates=['VERSION_DATE'])

# 统一数据类型（稳妥起见）
pred['CUST_SERIAL_NO'] = pred['CUST_SERIAL_NO'].astype(str)
pred['VERSION_DATE'] = pd.to_datetime(pred['VERSION_DATE'])

# 1) 原始行数（campaign-level）
raw_rows = len(pred)

# 2) 每月的 unique customer 数（即 customer-date 对的月度分布）
by_month = pred.groupby('VERSION_DATE')['CUST_SERIAL_NO'].nunique().sort_index()

# 3) customer-date 总数（= 在三个月内去重后的 (VERSION_DATE, CUST_SERIAL_NO) 对数）
unique_pairs_drop = pred.drop_duplicates(['VERSION_DATE', 'CUST_SERIAL_NO']).shape[0]

# 也可用分月求和（做个一致性校验）
unique_pairs_sum = int(by_month.sum())

# 4) 三个月合并后的唯一个客数（仅按 CUST_SERIAL_NO 去重）
unique_customers = pred['CUST_SERIAL_NO'].nunique()

# 5) 每位客户平均出现的月份数（辅助理解）
avg_months_per_customer = unique_pairs_drop / unique_customers if unique_customers else float('nan')

# ---- 打印结果（英文）----
print("=== Offline Evaluation Summary (3-month window) ===")
print(f"Raw rows (campaign-level): {raw_rows:,}")

print("\n# Unique customer-date pairs by month:")
for d, n in by_month.items():
    # 显示为 YYYY-MM-DD 以与你的数据一致
    print(f"  {d.date()}: {int(n):,}")

print(f"\nTotal unique customer-date pairs (drop-duplicates): {unique_pairs_drop:,}")
print(f"Total unique customer-date pairs (sum of monthly): {unique_pairs_sum:,}")

# 一致性检查提示（非报错，仅提示）
print(f"Consistency check (pairs equal by both methods): {unique_pairs_drop == unique_pairs_sum}")

print(f"\nUnique customers across 3 months: {unique_customers:,}")
print(f"Avg months per customer (pairs/customers): {avg_months_per_customer:.2f}")